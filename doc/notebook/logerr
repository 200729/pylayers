12/08/2013 11:54:08 PM Reading notebook 2-gis/MultiSubsegments.ipynb
12/08/2013 11:54:08 PM Running cell:
from pylayers.simul.simulem import *
from pylayers.antprop.rays import *
from pylayers.gis.layout import *
from pylayers.antprop.signature import *
import pylayers.signal.bsignal as bs
import pylayers.signal.waveform as wvf 
from pylayers.simul.simulem import *
import matplotlib.pyplot as plt 

12/08/2013 11:54:15 PM Cell returned
12/08/2013 11:54:15 PM Running cell:
S = Simul()
filestr = 'defstr3'
S.layout(filestr+'.ini','matDB.ini','slabDB.ini')

12/08/2013 11:54:15 PM Cell returned
12/08/2013 11:54:15 PM Running cell:
S.L.chgmss(1,ss_name=['AIR','AIR','WOOD'])
S.L.build()

12/08/2013 11:54:15 PM Cell returned
12/08/2013 11:54:15 PM Running cell:
S.L.Gs.node

12/08/2013 11:54:15 PM Cell returned
12/08/2013 11:54:15 PM Running cell:
S.info()

12/08/2013 11:54:15 PM Cell returned
12/08/2013 11:54:15 PM Running cell:
S.tx.clear()
S.rx.clear()

# 
tx=np.array([759,1114,1.0])
rx=np.array([767,1114,1.5])
#
S.tx.point(tx)
S.rx.point(rx)
# getting cycles from tx 
ctx = S.L.pt2cy(S.tx.position[:,0])
# getting cycles from rx 
crx = S.L.pt2cy(S.rx.position[:,0])
f,a = S.show()


12/08/2013 11:54:16 PM Cell returned
12/08/2013 11:54:16 PM Running cell:
fGHz=np.arange(2,6,0.5)
wav = wvf.Waveform(fcGHz=4,bandGHz=1.5)
wav.show()

12/08/2013 11:54:16 PM Cell returned
12/08/2013 11:54:16 PM Running cell:
Si = Signatures(S.L,ctx,crx)
Si.run1(cutoff=5)
r2d = Si.rays(tx,rx)
r3d = r2d.to3D(S.L)
r3d.locbas(S.L)
r3d.fillinter(S.L)

12/08/2013 11:54:17 PM Cell returned
12/08/2013 11:54:17 PM Running cell:
r3d

12/08/2013 11:54:17 PM Cell returned
12/08/2013 11:54:17 PM Running cell:
layer = ['AIR','AIR','AIR']
S.L.chgmss(1,ss_name=layer)
S.L.Gs.node[1]['ss_name']=layer
S.L.g2npy()
# graph to numpy 
r3d.fillinter(S.L,append=True)
Cair = r3d.eval(fGHz)
scair = Cair.prop2tran(a='theta',b='theta')
cirair = scair.applywavB(wav.sfg)
#cirair = evcir(r3d,wav)
fig,ax = cirair.plot(types=['v'],xmin=20,xmax=60)
title = plt.title(str(layer))

12/08/2013 11:54:18 PM Cell returned
12/08/2013 11:54:18 PM Running cell:
type(cirair)

12/08/2013 11:54:18 PM Cell returned
12/08/2013 11:54:18 PM Running cell:
layer = ['PARTITION','PARTITION','PARTITION']
S.L.chgmss(1,ss_name=layer)
S.L.Gs.node[1]['ss_name']=layer
S.L.g2npy()
# graph to numpy 
r3d.fillinter(S.L,append=True)
Cwood=r3d.eval(fGHz)
scwood=Cwood.prop2tran(a='theta',b='theta')
cirwood = scwood.applywavB(wav.sfg)
cirwood.plot(types=['v'],xmin=20,xmax=60)
plt.title(str(layer))

12/08/2013 11:54:18 PM Cell returned
12/08/2013 11:54:18 PM Running cell:
layer = ['METAL','METAL','METAL']
S.L.chgmss(1,ss_name=layer)
S.L.Gs.node[1]['ss_name']=layer
# graph to numpy 
S.L.g2npy()
r3d.fillinter(S.L,append=True)
Cmetal=r3d.eval(fGHz)
scmetal=Cmetal.prop2tran(a='theta',b='theta')
cirmetal = scmetal.applywavB(wav.sfg)
cirmetal.plot(types=['v'],xmin=20,xmax=60)
plt.title(str(layer))
plt.show()

12/08/2013 11:54:19 PM Cell returned
12/08/2013 11:54:19 PM Running cell:
#fig2=plt.figure()
f,a=cirair.plot(types=['l20'],color='b')
plt.axis([0,100,-120,-40])
plt.title('A simple illustration of shadowing effect')
plt.legend(['air'])
f,a=cirwood.plot(types=['l20'],color='k')
plt.axis([0,100,-120,-40])
plt.legend(['wood'])
f,a=cirmetal.plot(types=['l20'],color='r')
plt.axis([0,100,-120,-40])
plt.legend(['metal'])

12/08/2013 11:54:19 PM Cell returned
12/08/2013 11:54:19 PM Running cell:
from IPython.core.display import HTML

def css_styling():
    styles = open("../styles/custom.css", "r").read()
    return HTML(styles)
css_styling()

12/08/2013 11:54:19 PM Cell returned
12/08/2013 11:54:19 PM Saving to 2-gis/MultiSubsegments.ipynb
12/09/2013 07:07:46 PM Reading notebook 4-signal/DEV-Bsignal.ipynb
12/09/2013 07:07:46 PM Running cell:
from pylayers.signal.bsignal import *
from pylayers.simul.simulem import *
figsize(8,8)

12/09/2013 07:07:48 PM Cell returned
12/09/2013 07:07:48 PM Running cell:
fc     = 4 
band   = 2
thresh = 10
fe     = 100 
ip =EnImpulse([],fc,band,thresh,fe)

12/09/2013 07:07:48 PM Cell returned
12/09/2013 07:07:48 PM Running cell:
ip.info()

12/09/2013 07:07:48 PM Cell returned
12/09/2013 07:07:48 PM Running cell:
E1= sum(ip.y*ip.y)*ip.dx()
print "Integration in time",E1

12/09/2013 07:07:48 PM Cell returned
12/09/2013 07:07:48 PM Running cell:
P = ip.esd()
E2 = sum(P.y)*P.dx()
print "Integration in frequency domain ",E2

12/09/2013 07:07:48 PM Cell returned
12/09/2013 07:07:48 PM Running cell:
S= Simul()
S.load('where2.ini')

12/09/2013 07:07:49 PM Cell raised uncaught exception: NameError
12/09/2013 07:07:49 PM Saving to 4-signal/DEV-Bsignal.ipynb
12/09/2013 07:07:49 PM Exiting with nonzero exit status
